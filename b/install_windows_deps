#!/bin/bash
#
# This script builds and installs MJIN2 dependencies for MinGW.
#

SRC_DIR=$1
BUILD_DIR=$2
if [ -z $SRC_DIR ] || [ -z $BUILD_DIR ]; then
    echo "Usage: $0 SRC_DIR BUILD_DIR"
    exit
fi
CWD=`pwd`
MINGW_DIR="C:/MinGW"
# Get Unix names for Unix utils.
SRC_DIRU=`cygpath $SRC_DIR`
BUILD_DIRU=`cygpath $BUILD_DIR`
# Versions.
ALURE_VERSION=1.2
LIBPNG_VERSION=1.6.1
LIBXML2_VERSION=2.9.0
OPENAL_VERSION=1.15.1
OSG_VERSION=13363
PCRE_VERSION=8.32
ZLIB_VERSION=1.2.7

# libxml2. 
cd $CWD
LIBXML2=$BUILD_DIRU/libxml2
if [ ! -d $LIBXML2 ]; then
    echo "libxml2 is not found. Building it."
    mkdir -p $LIBXML2
    tar -xf $SRC_DIRU/libxml2-$LIBXML2_VERSION.tar.gz -C $LIBXML2
    cd $LIBXML2/libxml2-$LIBXML2_VERSION/win32
    cscript configure.js prefix=C:\\MinGW compiler=mingw iconv=no
    make
    make install
    strip -s $MINGW_DIR/bin/libxml2.dll
else
    echo "libxml2 was found in '$LIBXML2'. Skipping."
fi

# zlib.
cd $CWD
ZLIB=$BUILD_DIRU/zlib
if [ ! -d $ZLIB ]; then
    echo "zlib is not found. Building it."
    mkdir -p $ZLIB/{src,build}
    tar -xf $SRC_DIRU/zlib-$ZLIB_VERSION.tar.bz2 -C $ZLIB/src
    # CMake complains about the file, so remove it.
    rm $ZLIB/src/zlib-$ZLIB_VERSION/zconf.h
    cd $ZLIB/build
    cmake -G "MinGW Makefiles" \
          -DCMAKE_INSTALL_PREFIX=$MINGW_DIR \
          ../src/zlib-$ZLIB_VERSION
    make
    # Fix bug for OGRE. Not sure if it's necessary for OSG. Keep it for now.
    #sed -i 's/MOVEABLE IMPURE LOADONCALL DISCARDABLE//' $ZLIB/src/zlib-$ZLIB_VERSION/win32/zlib1.rc
    make install
else
    echo "zlib was found in '$ZLIB'. Skipping."
fi

# libpng. 
cd $CWD
LIBPNG=$BUILD_DIRU/libpng
if [ ! -d $LIBPNG ]; then
    echo "libpng is not found. Building it."
    mkdir -p $LIBPNG/{src,build}
    tar -xf $SRC_DIRU/libpng-$LIBPNG_VERSION.tar.xz -C $LIBPNG/src
    cd $LIBPNG/build
    cmake -G "MinGW Makefiles" \
          -DCMAKE_INSTALL_PREFIX=$MINGW_DIR \
          ../src/libpng-$LIBPNG_VERSION
    make
    make install
else
    echo "libpng was found in '$LIBPNG'. Skipping."
fi

# OpenSceneGraph.
cd $CWD
OSG=$BUILD_DIRU/osg
if [ ! -d $OSG ]; then
    echo "OpenSceneGraph is not found. Building it."
    mkdir -p $OSG/{src,build}
    tar -xf $SRC_DIRU/osg-$OSG_VERSION.tar.bz2 -C $OSG/src
    cp osgmass.patch $OSG/src
    # Patch.
    cd $OSG/src/osg-$OSG_VERSION
    # Don't compile examples.
    patch -p0 < ../osgmass.patch
    cd $OSG/build
    cmake -G "MinGW Makefiles"              \
          -DBUILD_OSG_APPLICATIONS=OFF      \
          -DCMAKE_INSTALL_PREFIX=$MINGW_DIR \
          ../src/osg-$OSG_VERSION
    make
    make install
else
    echo "OpenSceneGraph was found in '$OSG'. Skipping."
fi

# PCRE.
cd $CWD
PCRE=$BUILD_DIRU/pcre
if [ ! -d $PCRE ]; then
    echo "PCRE is not found. Building it."
    mkdir -p $PCRE/{src,build}
    tar -xf $SRC_DIRU/pcre-$PCRE_VERSION.tar.bz2 -C $PCRE/src
    cd $PCRE/build
    cmake -G "MinGW Makefiles"                 \
          -DCMAKE_INSTALL_PREFIX=$MINGW_DIR    \
          -DBUILD_SHARED_LIBS=ON               \
          -DPCRE_BUILD_PCRECPP=OFF             \
          -DPCRE_BUILD_PCREGREP=OFF            \
          -DPCRE_BUILD_TESTS=OFF               \
          -DPCRE_SUPPORT_UNICODE_PROPERTIES=ON \
          -DPCRE_SUPPORT_UTF8=ON               \
          ../src/pcre-$PCRE_VERSION
    make
    make install
else
    echo "PCRE was found in '$PCRE'. Skipping."
fi

# OpenAL.
cd $CWD
OPENAL=$BUILD_DIRU/openal
if [ ! -d $OPENAL ]; then
    echo "OpenAL is not found. Building it."
    unzip $SRC_DIRU/openal-soft-${OPENAL_VERSION}-bin.zip -d $OPENAL
    cd $OPENAL/openal-soft-${OPENAL_VERSION}-bin
    cp -R include/* $MINGW_DIR/include
    cp lib/Win32/* $MINGW_DIR/lib
    cp Win32/soft_oal.dll $MINGW_DIR/bin/OpenAL32.dll
else
    echo "OpenAL was found in '$OPENAL'. Skipping."
fi

# ALURE.
cd $CWD
ALURE=$BUILD_DIRU/alure
if [ ! -d $ALURE ]; then
    echo "ALURE is not found. Building it."
    unzip $SRC_DIRU/alure-${ALURE_VERSION}-win32-bin.zip -d $ALURE
    cd $ALURE/alure-${ALURE_VERSION}-bin
    cp include/alure.h $MINGW_DIR/include/AL
    cp lib/Win32/libALURE32.dll.a $MINGW_DIR/lib
    cp dlls/Win32/ALURE32.dll $MINGW_DIR/bin
else
    echo "ALURE was found in '$ALURE'. Skipping."
fi

